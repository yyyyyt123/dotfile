#!/usr/bin/env bash

set -e

os_type="$(uname -s)"

apt_packages="curl git iproute2 python3-pip ripgrep tmux vim-gtk wl-clipboard zsh"
apt_packages_optional="gnupg htop inotify-tools jq pass pwgen rsync shellcheck unzip"

clone_path="${clone_path:-"${HOME}/dotfile"}"

if [ $os_type == "Linux" ]; then
    echo "${apt_packages} ${apt_packages_optional}"
elif [ $os_type == "Darwin" ]; then
    echo "do not support yet!"
    exit 0
fi

read -rp "Do you want to install the above packages? (y/n) " yn

case "$yn" in
    [Yy]*)
        if [ "${os_type}" == "Linux" ]; then
            sudo -E apt-get update && sudo -E apt-get install -y ${apt_packages} ${apt_packages_optional}
        fi
        ;;
    [Nn]*)
        echo "Do not install any packages"
        # exit 0
        ;;
    *)
        echo "Please answer y or n";;
esac

###############################################################################
# Create initial directories
###############################################################################

mkdir -p "${HOME}/.config/zsh" "${HOME}/.cache/zsh" \
    "${HOME}/.local/bin" "${HOME}/.local/share" \
    "${HOME}/.local/state" "${HOME}/.vim/spell"

###############################################################################
# Install oh-my-zsh
###############################################################################
OH_MY_ZSH_PATH="${HOME}/.oh-my-zsh"
ZSH_CUSTOM_SYNTAX=~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
ZSH_CUSTOM_AUTOSUG=~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

# install oh-my-zsh
if ! [ -d "$OH_MY_ZSH_PATH" ]; then
    echo "install oh-my-zsh"
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
else
    echo "oh-my-zsh already installed"
fi

# install syntax-highlighting
if ! [ -d "$ZSH_CUSTOM_SYNTAX" ]; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
fi

# install auto-suggestions
if ! [ -d "$ZSH_CUSTOM_SYNTAX" ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions
fi

# install autojump
sudo -E apt-get install autojump



###############################################################################
# Install Plug (Vim plugin manager)
###############################################################################

curl -fLo "${HOME}/.vim/autoload/plug.vim" --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

cat << EOF

A potentially dangerous action is about to happen. The above files are going to
get forcefully symlinked.

What does that mean?

Any config files you have on the right hand side of the paths are going to get
overwritten with the files that come with my dotfiles (left side).

If you care about your original config files now would be the time to back
them up. They will ALL be overwritten if you say yes to the prompt below.
EOF

while true; do
  read -rep $'\nReady to continue and apply the symlinks? (y) ' y
  case "${y}" in
      [Yy]*)

          break;;
      *) echo "Please answer y or CTRL+c the script to abort everything";;
  esac
done


ln -fs "${clone_path}/.zshenv" "${HOME}/.zshenv"
ln -fs "${clone_path}/.tmux.conf" "${HOME}/.tmux.conf"
ln -fs "${clone_path}/.vimrc" "${HOME}/.vimrc"
ln -fs "${clone_path}/.vim/spell/en.utf-8.add" "${HOME}/.vim/spell/en.utf-8.add"
ln -fs "${clone_path}/.config/zsh/.zshrc" "${HOME}/.config/zsh/.zshrc"
ln -fs "${clone_path}/.config/zsh/.zprofile" "${HOME}/.config/zsh/.zprofile"
ln -fs "${clone_path}/.config/zsh/.aliases" "${HOME}/.config/zsh/.aliases"

###############################################################################
# Install Vim plugins
###############################################################################

printf "\n\nInstalling Vim plugins...\n"

vim -E +PlugInstall +qall || true

###############################################################################
# Install Anaconda
###############################################################################
command -v conda >/dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "Conda installed"
else
    echo "Now install Conda"
    cd ~
    wget https://repo.anaconda.com/archive/Anaconda3-2023.09-0-Linux-x86_64.sh
    chmod +x Anaconda3-2023.09-0-Linux-x86_64.sh
    ./Anaconda3-2023.09-0-Linux-x86_64.sh
fi

###############################################################################
# Done!
###############################################################################

cat << EOF
Everything was installed successfully!

Check out the README file on GitHub to do 1 quick thing manually:

https://github.com/nickjj/dotfiles#did-you-install-everything-successfully

You can safely close this terminal.

The next time you open your terminal zsh will be ready to go!
EOF

exit 0
